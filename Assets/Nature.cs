// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class Nature : Player
{
	public int total_units;
	public static List<Animal> animals  = new List<Animal>();
//	public static List<


	public Nature (string name) : base(name)
	{
	}
	

	override public void move()
	{
		foreach (Animal ani in animals) {
			ani.move();
		}
	}

	override public void setupUnits(Map map, Hex hex)
	{
	}


	override public void setupUnits(Map map){
		total_units = (int)( GameEngine.num_col * GameEngine.num_row * 0.05);
		for (int i=0; i< total_units; i++) {
			Hex temp = map.terrain[Random.Range (0,GameEngine.num_row), Random.Range (0, GameEngine.num_col)];
			if(GameUtils.isLand(temp)){
				Vector3 position = temp.center;
				Animal newAnimal = new Animal(position);
				newAnimal.on_hex = temp;
				animals.Add ( newAnimal );
				temp.setUnit(newAnimal);
			}
		}
//		setupTrees ();
	}

	public void setupTrees(){
			for (int i=0; i < GameEngine.num_row; i++) {
				for (int j=0; j < GameEngine.num_col; j++) {
					for(int k=0; k < 5; k++){
	//				GameObject tree = GameObject.Instantiate(Resources.Load("tree")) as GameObject;
						if (GameUtils.isLand (GameEngine.map.terrain [i, j]) && Random.Range (0, 100) < 31) {
							GameObject tree = GameObject.Instantiate (Resources.Load ("tree")) as GameObject;
						tree.transform.position = GameEngine.map.terrain [i, j].center + new Vector3(Random.Range (-2.0f, 2.0f),0,Random.Range (-2.0f, 2.0f));
							tree.transform.localScale = new Vector3 (0.005f, 0.005f, 0.005f);
							tree.transform.localScale = new Vector3 (tree.transform.localScale.x, tree.transform.localScale.y * -1, tree.transform.localScale.z * -1);
							//				tree.transform.localRotation = new Quarternion(0,0,180);
						}
					}
				}
			}
	}

}